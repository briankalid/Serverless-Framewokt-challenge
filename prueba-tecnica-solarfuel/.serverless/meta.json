{
  "/home/briankalid/prueba-tecnica-solarfuel": {
    "versionSfCore": null,
    "versionFramework": "4.1.12",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeServiceName": null,
    "servicePath": "/home/briankalid/prueba-tecnica-solarfuel",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "org": "briankalid",
      "app": "prueba-tecnica-solarfuel",
      "service": "prueba-tecnica-solarfuel",
      "plugins": [
        "serverless-offline"
      ],
      "provider": {
        "name": "aws",
        "runtime": "python3.10"
      },
      "functions": {
        "hello": {
          "handler": "handler.hello",
          "events": [
            {
              "httpApi": {
                "path": "/s1",
                "method": "get"
              }
            }
          ]
        },
        "profitability_flow": {
          "handler": "profitability_handler.profitability_flow",
          "events": [
            {
              "httpApi": {
                "path": "/profitability/flow",
                "method": "get"
              }
            }
          ]
        },
        "profitability_time": {
          "handler": "profitability_handler.profitability_time",
          "events": [
            {
              "httpApi": {
                "path": "/profitability/time",
                "method": "post",
                "request": {
                  "schemas": {
                    "application/json": "${file(./profitability_request.json)}"
                  }
                }
              }
            }
          ]
        }
      }
    },
    "serviceRawFile": "# \"org\" ensures this Service is used with the correct Serverless Framework Access Key.\norg: briankalid\n# \"app\" enables Serverless Framework Dashboard features and sharing them with other Services.\napp: prueba-tecnica-solarfuel\n# \"service\" is the name of this project. This will also be added to your AWS resource names.\nservice: prueba-tecnica-solarfuel\nplugins:\n  - serverless-offline\n\nprovider:\n  name: aws\n  runtime: python3.10\nfunctions:\n  hello:\n    handler: handler.hello\n    events:\n      - httpApi:\n          path: /s1\n          method: get\n  profitability_flow:\n    handler: profitability_handler.profitability_flow\n    events:\n      - httpApi:\n          path: /profitability/flow\n          method: get\n  profitability_time:\n    handler: profitability_handler.profitability_time\n    events:\n      - httpApi:\n          path: /profitability/time\n          method: post\n          request:\n            schemas:\n              application/json: ${file(./profitability_request.json)}\n",
    "command": [
      "offline"
    ],
    "options": {},
    "error": {
      "message": "Cannot resolve '${file(./profitability_request.json)}' variable at 'functions.profitability_time.events.0.httpApi.request.schemas.application/json'. None of the variables returned a value and no default value was provided. Please check your variable definitions or provide a default value.",
      "stack": "Error: Cannot resolve '${file(./profitability_request.json)}' variable at 'functions.profitability_time.events.0.httpApi.request.schemas.application/json'. None of the variables returned a value and no default value was provided. Please check your variable definitions or provide a default value.\n    at _ResolverManager.resolve (file:///home/briankalid/.serverless/releases/4.1.12/package/dist/sf-core.js:917:48202)\n    at async #handlePlaceholderNode (file:///home/briankalid/.serverless/releases/4.1.12/package/dist/sf-core.js:917:46745)\n    at async file:///home/briankalid/.serverless/releases/4.1.12/package/dist/sf-core.js:917:44880\n    at async processNodeAndHandleCompletion (file:///home/briankalid/.serverless/releases/4.1.12/package/dist/sf-core.js:917:38632)",
      "code": "MISSING_VARIABLE_RESULT"
    },
    "machineId": "8a8afa4a5e8d418d418fc2dd4e5b54c4",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "8adca108-80d3-44e8-bef2-4f0ce44c22bc",
    "orgName": "briankalid",
    "userId": "pGcSXSch5v5cfhW21X",
    "dashboard": {
      "isEnabledForService": true,
      "requiredAuthentication": false,
      "orgFeaturesInUse": {
        "providers": true,
        "monitoring": false
      },
      "orgObservabilityIntegrations": null,
      "serviceAppId": "5XJNbrRkxzs1J3qVN5",
      "serviceProvider": {
        "accessKeyId": "<REDACTED>",
        "secretAccessKey": "<REDACTED>",
        "sessionToken": "<REDACTED>"
      },
      "instanceParameters": null
    },
    "userName": "briankalid",
    "subscription": null,
    "userEmail": "briankalid2000@gmail.com",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "590183700991",
    "serviceProviderAwsCfStackId": null,
    "serviceProviderAwsCfStackCreated": null,
    "serviceProviderAwsCfStackUpdated": null,
    "serviceProviderAwsCfStackStatus": null,
    "serviceProviderAwsCfStackOutputs": null
  },
  "/home/briankalid/prueba-tecnica-solarfuel/profitability": {
    "versionSfCore": null,
    "versionFramework": null,
    "isWithinCompose": true,
    "isCompose": false,
    "composeOrgName": "briankalid",
    "composeResolverProviders": {
      "file": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "org": "briankalid",
            "app": "prueba-tecnica-solarfuel",
            "service": "prueba-tecnica-solarfuel",
            "plugins": [
              "serverless-offline"
            ],
            "provider": {
              "name": "aws",
              "runtime": "python3.10",
              "stage": "dev",
              "region": "us-east-1",
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ProfitabilityUnderscoreflowLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/prueba-tecnica-solarfuel-dev-profitability_flow"
                    }
                  },
                  "ProfitabilityUnderscoretimeLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/prueba-tecnica-solarfuel-dev-profitability_time"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "prueba-tecnica-solarfuel",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/prueba-tecnica-solarfuel-dev*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/prueba-tecnica-solarfuel-dev*:*:*"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "prueba-tecnica-solarfuel",
                            "dev",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  },
                  "ProfitabilityUnderscoreflowLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/prueba-tecnica-solarfuel/dev/1721190318958-2024-07-17T04:25:18.958Z/prueba-tecnica-solarfuel.zip"
                      },
                      "Handler": "handler.profitability_flow",
                      "Runtime": "python3.10",
                      "FunctionName": "prueba-tecnica-solarfuel-dev-profitability_flow",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "ProfitabilityUnderscoreflowLogGroup"
                    ]
                  },
                  "ProfitabilityUnderscoretimeLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/prueba-tecnica-solarfuel/dev/1721190318958-2024-07-17T04:25:18.958Z/prueba-tecnica-solarfuel.zip"
                      },
                      "Handler": "handler.profitability_time",
                      "Runtime": "python3.10",
                      "FunctionName": "prueba-tecnica-solarfuel-dev-profitability_time",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "ProfitabilityUnderscoretimeLogGroup"
                    ]
                  },
                  "ProfitabilityUnderscoreflowLambdaVersionSx80yKBNhx0ZZYNCZSDYHIcNEmKACZ8RhQIH2rCM6I": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "ProfitabilityUnderscoreflowLambdaFunction"
                      },
                      "CodeSha256": "67SPCcTbapd35MXsef3jTIAMNYWHeN4NmVVv8YpbN8Q="
                    }
                  },
                  "ProfitabilityUnderscoretimeLambdaVersionejuQ3HxwHUuwrFttaVwZEuwUciLorvgTDrU6jafu4": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "ProfitabilityUnderscoretimeLambdaFunction"
                      },
                      "CodeSha256": "67SPCcTbapd35MXsef3jTIAMNYWHeN4NmVVv8YpbN8Q="
                    }
                  },
                  "ApiGatewayRestApi": {
                    "Type": "AWS::ApiGateway::RestApi",
                    "Properties": {
                      "Name": "dev-prueba-tecnica-solarfuel",
                      "EndpointConfiguration": {
                        "Types": [
                          "EDGE"
                        ]
                      },
                      "Policy": ""
                    }
                  },
                  "ApiGatewayResourceProfitability": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "profitability",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceProfitabilityFlow": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceProfitability"
                      },
                      "PathPart": "flow",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceProfitabilityTime": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceProfitability"
                      },
                      "PathPart": "time",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodProfitabilityFlowPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceProfitabilityFlow"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "ProfitabilityUnderscoreflowLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": [],
                      "RequestValidatorId": {
                        "Ref": "ApiGatewayPruebatecnicasolarfuelRequestValidator"
                      },
                      "RequestModels": {
                        "application/json": {
                          "Ref": "ApiGatewayMethodProfitabilityFlowPostApplicationJsonModel"
                        }
                      }
                    },
                    "DependsOn": [
                      "ProfitabilityUnderscoreflowLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodProfitabilityTimePost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceProfitabilityTime"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "ProfitabilityUnderscoretimeLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": [],
                      "RequestValidatorId": {
                        "Ref": "ApiGatewayPruebatecnicasolarfuelRequestValidator"
                      },
                      "RequestModels": {
                        "application/json": {
                          "Ref": "ApiGatewayMethodProfitabilityTimePostApplicationJsonModel"
                        }
                      }
                    },
                    "DependsOn": [
                      "ProfitabilityUnderscoretimeLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayPruebatecnicasolarfuelRequestValidator": {
                    "Type": "AWS::ApiGateway::RequestValidator",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ValidateRequestBody": true,
                      "ValidateRequestParameters": true,
                      "Name": "prueba-tecnica-solarfuel-dev | Validate request body and querystring parameters"
                    }
                  },
                  "ApiGatewayMethodProfitabilityFlowPostApplicationJsonModel": {
                    "Type": "AWS::ApiGateway::Model",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ContentType": "application/json",
                      "Schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "Nombre": {
                            "type": "string"
                          },
                          "Inversion_Inicial": {
                            "type": "number"
                          },
                          "Mantenimiento_Anual": {
                            "type": "number"
                          },
                          "Ingreso_Renta_Anual": {
                            "type": "number"
                          },
                          "Ciclos": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "Nombre",
                          "Inversion_Inicial",
                          "Mantenimiento_Anual",
                          "Ingreso_Renta_Anual",
                          "Ciclos"
                        ]
                      }
                    }
                  },
                  "ApiGatewayMethodProfitabilityTimePostApplicationJsonModel": {
                    "Type": "AWS::ApiGateway::Model",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ContentType": "application/json",
                      "Schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                          "Nombre": {
                            "type": "string"
                          },
                          "Inversion_Inicial": {
                            "type": "number"
                          },
                          "Mantenimiento_Anual": {
                            "type": "number"
                          },
                          "Ingreso_Renta_Anual": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "Nombre",
                          "Inversion_Inicial",
                          "Mantenimiento_Anual",
                          "Ingreso_Renta_Anual"
                        ]
                      }
                    }
                  },
                  "ApiGatewayDeployment1721190318469": {
                    "Type": "AWS::ApiGateway::Deployment",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "StageName": "dev"
                    },
                    "DependsOn": [
                      "ApiGatewayMethodProfitabilityFlowPost",
                      "ApiGatewayMethodProfitabilityTimePost"
                    ]
                  },
                  "ProfitabilityUnderscoreflowLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "ProfitabilityUnderscoreflowLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "ProfitabilityUnderscoretimeLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "ProfitabilityUnderscoretimeLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    },
                    "Export": {
                      "Name": "sls-prueba-tecnica-solarfuel-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "ProfitabilityUnderscoreflowLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "ProfitabilityUnderscoreflowLambdaVersionSx80yKBNhx0ZZYNCZSDYHIcNEmKACZ8RhQIH2rCM6I"
                    },
                    "Export": {
                      "Name": "sls-prueba-tecnica-solarfuel-dev-ProfitabilityUnderscoreflowLambdaFunctionQualifiedArn"
                    }
                  },
                  "ProfitabilityUnderscoretimeLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "ProfitabilityUnderscoretimeLambdaVersionejuQ3HxwHUuwrFttaVwZEuwUciLorvgTDrU6jafu4"
                    },
                    "Export": {
                      "Name": "sls-prueba-tecnica-solarfuel-dev-ProfitabilityUnderscoretimeLambdaFunctionQualifiedArn"
                    }
                  },
                  "ServiceEndpoint": {
                    "Description": "URL of the service endpoint",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "ApiGatewayRestApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          },
                          "/dev"
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-prueba-tecnica-solarfuel-dev-ServiceEndpoint"
                    }
                  }
                }
              },
              "coreCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "functions": {
              "profitability_flow": {
                "handler": "handler.profitability_flow",
                "events": [
                  {
                    "http": {
                      "path": "profitability/flow",
                      "method": "post",
                      "request": {
                        "schemas": {
                          "application/json": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "Nombre": {
                                "type": "string"
                              },
                              "Inversion_Inicial": {
                                "type": "number"
                              },
                              "Mantenimiento_Anual": {
                                "type": "number"
                              },
                              "Ingreso_Renta_Anual": {
                                "type": "number"
                              },
                              "Ciclos": {
                                "type": "integer"
                              }
                            },
                            "required": [
                              "Nombre",
                              "Inversion_Inicial",
                              "Mantenimiento_Anual",
                              "Ingreso_Renta_Anual",
                              "Ciclos"
                            ]
                          }
                        }
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "prueba-tecnica-solarfuel-dev-profitability_flow",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "python3.10",
                "vpc": {},
                "versionLogicalId": "ProfitabilityUnderscoreflowLambdaVersionSx80yKBNhx0ZZYNCZSDYHIcNEmKACZ8RhQIH2rCM6I"
              },
              "profitability_time": {
                "handler": "handler.profitability_time",
                "events": [
                  {
                    "http": {
                      "path": "profitability/time",
                      "method": "post",
                      "request": {
                        "schemas": {
                          "application/json": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                              "Nombre": {
                                "type": "string"
                              },
                              "Inversion_Inicial": {
                                "type": "number"
                              },
                              "Mantenimiento_Anual": {
                                "type": "number"
                              },
                              "Ingreso_Renta_Anual": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "Nombre",
                              "Inversion_Inicial",
                              "Mantenimiento_Anual",
                              "Ingreso_Renta_Anual"
                            ]
                          }
                        }
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "prueba-tecnica-solarfuel-dev-profitability_time",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "python3.10",
                "vpc": {},
                "versionLogicalId": "ProfitabilityUnderscoretimeLambdaVersionejuQ3HxwHUuwrFttaVwZEuwUciLorvgTDrU6jafu4"
              }
            }
          },
          "configFileDirPath": "/home/briankalid/prueba-tecnica-solarfuel/profitability",
          "config": {
            "type": "file"
          },
          "options": {},
          "stage": "dev",
          "dashboard": {
            "aws": {
              "accessKeyId": "<REDACTED>",
              "secretAccessKey": "<REDACTED>",
              "sessionToken": "<REDACTED>"
            },
            "params": null,
            "accessKey": "<REDACTED>"
          },
          "composeParams": {}
        },
        "resolvers": {}
      }
    },
    "composeServiceName": "profitability",
    "servicePath": "/home/briankalid/prueba-tecnica-solarfuel/profitability",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "org": "briankalid",
      "app": "prueba-tecnica-solarfuel",
      "service": "prueba-tecnica-solarfuel",
      "plugins": [
        "serverless-offline"
      ],
      "provider": {
        "name": "aws",
        "runtime": "python3.10",
        "stage": "dev",
        "region": "us-east-1",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            },
            "ProfitabilityUnderscoreflowLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/prueba-tecnica-solarfuel-dev-profitability_flow"
              }
            },
            "ProfitabilityUnderscoretimeLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/prueba-tecnica-solarfuel-dev-profitability_time"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "prueba-tecnica-solarfuel",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/prueba-tecnica-solarfuel-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/prueba-tecnica-solarfuel-dev*:*:*"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "prueba-tecnica-solarfuel",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "ProfitabilityUnderscoreflowLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/prueba-tecnica-solarfuel/dev/1721190318958-2024-07-17T04:25:18.958Z/prueba-tecnica-solarfuel.zip"
                },
                "Handler": "handler.profitability_flow",
                "Runtime": "python3.10",
                "FunctionName": "prueba-tecnica-solarfuel-dev-profitability_flow",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "ProfitabilityUnderscoreflowLogGroup"
              ]
            },
            "ProfitabilityUnderscoretimeLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/prueba-tecnica-solarfuel/dev/1721190318958-2024-07-17T04:25:18.958Z/prueba-tecnica-solarfuel.zip"
                },
                "Handler": "handler.profitability_time",
                "Runtime": "python3.10",
                "FunctionName": "prueba-tecnica-solarfuel-dev-profitability_time",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "ProfitabilityUnderscoretimeLogGroup"
              ]
            },
            "ProfitabilityUnderscoreflowLambdaVersionSx80yKBNhx0ZZYNCZSDYHIcNEmKACZ8RhQIH2rCM6I": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "ProfitabilityUnderscoreflowLambdaFunction"
                },
                "CodeSha256": "67SPCcTbapd35MXsef3jTIAMNYWHeN4NmVVv8YpbN8Q="
              }
            },
            "ProfitabilityUnderscoretimeLambdaVersionejuQ3HxwHUuwrFttaVwZEuwUciLorvgTDrU6jafu4": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "ProfitabilityUnderscoretimeLambdaFunction"
                },
                "CodeSha256": "67SPCcTbapd35MXsef3jTIAMNYWHeN4NmVVv8YpbN8Q="
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "dev-prueba-tecnica-solarfuel",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceProfitability": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "profitability",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceProfitabilityFlow": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceProfitability"
                },
                "PathPart": "flow",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceProfitabilityTime": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceProfitability"
                },
                "PathPart": "time",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodProfitabilityFlowPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceProfitabilityFlow"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ProfitabilityUnderscoreflowLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": [],
                "RequestValidatorId": {
                  "Ref": "ApiGatewayPruebatecnicasolarfuelRequestValidator"
                },
                "RequestModels": {
                  "application/json": {
                    "Ref": "ApiGatewayMethodProfitabilityFlowPostApplicationJsonModel"
                  }
                }
              },
              "DependsOn": [
                "ProfitabilityUnderscoreflowLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodProfitabilityTimePost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceProfitabilityTime"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ProfitabilityUnderscoretimeLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": [],
                "RequestValidatorId": {
                  "Ref": "ApiGatewayPruebatecnicasolarfuelRequestValidator"
                },
                "RequestModels": {
                  "application/json": {
                    "Ref": "ApiGatewayMethodProfitabilityTimePostApplicationJsonModel"
                  }
                }
              },
              "DependsOn": [
                "ProfitabilityUnderscoretimeLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayPruebatecnicasolarfuelRequestValidator": {
              "Type": "AWS::ApiGateway::RequestValidator",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ValidateRequestBody": true,
                "ValidateRequestParameters": true,
                "Name": "prueba-tecnica-solarfuel-dev | Validate request body and querystring parameters"
              }
            },
            "ApiGatewayMethodProfitabilityFlowPostApplicationJsonModel": {
              "Type": "AWS::ApiGateway::Model",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ContentType": "application/json",
                "Schema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                    "Nombre": {
                      "type": "string"
                    },
                    "Inversion_Inicial": {
                      "type": "number"
                    },
                    "Mantenimiento_Anual": {
                      "type": "number"
                    },
                    "Ingreso_Renta_Anual": {
                      "type": "number"
                    },
                    "Ciclos": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "Nombre",
                    "Inversion_Inicial",
                    "Mantenimiento_Anual",
                    "Ingreso_Renta_Anual",
                    "Ciclos"
                  ]
                }
              }
            },
            "ApiGatewayMethodProfitabilityTimePostApplicationJsonModel": {
              "Type": "AWS::ApiGateway::Model",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ContentType": "application/json",
                "Schema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                    "Nombre": {
                      "type": "string"
                    },
                    "Inversion_Inicial": {
                      "type": "number"
                    },
                    "Mantenimiento_Anual": {
                      "type": "number"
                    },
                    "Ingreso_Renta_Anual": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "Nombre",
                    "Inversion_Inicial",
                    "Mantenimiento_Anual",
                    "Ingreso_Renta_Anual"
                  ]
                }
              }
            },
            "ApiGatewayDeployment1721190318469": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "dev"
              },
              "DependsOn": [
                "ApiGatewayMethodProfitabilityFlowPost",
                "ApiGatewayMethodProfitabilityTimePost"
              ]
            },
            "ProfitabilityUnderscoreflowLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "ProfitabilityUnderscoreflowLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "ProfitabilityUnderscoretimeLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "ProfitabilityUnderscoretimeLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "Export": {
                "Name": "sls-prueba-tecnica-solarfuel-dev-ServerlessDeploymentBucketName"
              }
            },
            "ProfitabilityUnderscoreflowLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "ProfitabilityUnderscoreflowLambdaVersionSx80yKBNhx0ZZYNCZSDYHIcNEmKACZ8RhQIH2rCM6I"
              },
              "Export": {
                "Name": "sls-prueba-tecnica-solarfuel-dev-ProfitabilityUnderscoreflowLambdaFunctionQualifiedArn"
              }
            },
            "ProfitabilityUnderscoretimeLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "ProfitabilityUnderscoretimeLambdaVersionejuQ3HxwHUuwrFttaVwZEuwUciLorvgTDrU6jafu4"
              },
              "Export": {
                "Name": "sls-prueba-tecnica-solarfuel-dev-ProfitabilityUnderscoretimeLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/dev"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-prueba-tecnica-solarfuel-dev-ServiceEndpoint"
              }
            }
          }
        },
        "coreCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "profitability_flow": {
          "handler": "handler.profitability_flow",
          "events": [
            {
              "http": {
                "path": "profitability/flow",
                "method": "post",
                "request": {
                  "schemas": {
                    "application/json": {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "type": "object",
                      "properties": {
                        "Nombre": {
                          "type": "string"
                        },
                        "Inversion_Inicial": {
                          "type": "number"
                        },
                        "Mantenimiento_Anual": {
                          "type": "number"
                        },
                        "Ingreso_Renta_Anual": {
                          "type": "number"
                        },
                        "Ciclos": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "Nombre",
                        "Inversion_Inicial",
                        "Mantenimiento_Anual",
                        "Ingreso_Renta_Anual",
                        "Ciclos"
                      ]
                    }
                  }
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "prueba-tecnica-solarfuel-dev-profitability_flow",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "python3.10",
          "vpc": {},
          "versionLogicalId": "ProfitabilityUnderscoreflowLambdaVersionSx80yKBNhx0ZZYNCZSDYHIcNEmKACZ8RhQIH2rCM6I"
        },
        "profitability_time": {
          "handler": "handler.profitability_time",
          "events": [
            {
              "http": {
                "path": "profitability/time",
                "method": "post",
                "request": {
                  "schemas": {
                    "application/json": {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "type": "object",
                      "properties": {
                        "Nombre": {
                          "type": "string"
                        },
                        "Inversion_Inicial": {
                          "type": "number"
                        },
                        "Mantenimiento_Anual": {
                          "type": "number"
                        },
                        "Ingreso_Renta_Anual": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "Nombre",
                        "Inversion_Inicial",
                        "Mantenimiento_Anual",
                        "Ingreso_Renta_Anual"
                      ]
                    }
                  }
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "prueba-tecnica-solarfuel-dev-profitability_time",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "python3.10",
          "vpc": {},
          "versionLogicalId": "ProfitabilityUnderscoretimeLambdaVersionejuQ3HxwHUuwrFttaVwZEuwUciLorvgTDrU6jafu4"
        }
      }
    },
    "serviceRawFile": "# \"org\" ensures this Service is used with the correct Serverless Framework Access Key.\norg: briankalid\n# \"app\" enables Serverless Framework Dashboard features and sharing them with other Services.\napp: prueba-tecnica-solarfuel\n# \"service\" is the name of this project. This will also be added to your AWS resource names.\nservice: prueba-tecnica-solarfuel\nplugins:\n  - serverless-offline\n\nprovider:\n  name: aws\n  runtime: python3.10\nfunctions:\n#   hello:\n#     handler: handler.hello\n#     events:\n#       - httpApi:\n#           path: /s1\n#           method: get\n  profitability_flow:\n    handler: handler.profitability_flow\n    events:\n      - http:\n          path: /profitability/flow\n          method: post\n          request:\n            schemas:\n              application/json: ${file(models/profitability_request_flow.json)}\n  profitability_time:\n    handler: handler.profitability_time\n    events:\n      - http:\n          path: /profitability/time\n          method: post\n          request:\n            schemas:\n              application/json: ${file(models/profitability_request.json)}\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "error": null,
    "params": {},
    "machineId": "8a8afa4a5e8d418d418fc2dd4e5b54c4",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "8adca108-80d3-44e8-bef2-4f0ce44c22bc",
    "orgName": "briankalid",
    "userId": "pGcSXSch5v5cfhW21X",
    "dashboard": {
      "isEnabledForService": true,
      "requiredAuthentication": false,
      "orgFeaturesInUse": {
        "providers": true,
        "monitoring": false
      },
      "orgObservabilityIntegrations": null,
      "serviceAppId": "5XJNbrRkxzs1J3qVN5",
      "serviceProvider": {
        "accessKeyId": "<REDACTED>",
        "secretAccessKey": "<REDACTED>",
        "sessionToken": "<REDACTED>"
      },
      "instanceParameters": null
    },
    "userName": "briankalid",
    "subscription": null,
    "userEmail": "briankalid2000@gmail.com",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "590183700991",
    "versionSf": "4.1.12",
    "serviceProviderAwsCfStackName": "prueba-tecnica-solarfuel-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:590183700991:stack/prueba-tecnica-solarfuel-dev/f556f1f0-43f1-11ef-be88-0e947989e88d",
    "serviceProviderAwsCfStackCreated": "2024-07-17T04:06:35.490Z",
    "serviceProviderAwsCfStackUpdated": "2024-07-17T04:25:30.044Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "ProfitabilityUnderscoretimeLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:590183700991:function:prueba-tecnica-solarfuel-dev-profitability_time:3",
        "Description": "Current Lambda function version",
        "ExportName": "sls-prueba-tecnica-solarfuel-dev-ProfitabilityUnderscoretimeLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ProfitabilityUnderscoreflowLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:590183700991:function:prueba-tecnica-solarfuel-dev-profitability_flow:4",
        "Description": "Current Lambda function version",
        "ExportName": "sls-prueba-tecnica-solarfuel-dev-ProfitabilityUnderscoreflowLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://83au79n46b.execute-api.us-east-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-prueba-tecnica-solarfuel-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "prueba-tecnica-solarfuel--serverlessdeploymentbuck-rmwmupcwbru2",
        "ExportName": "sls-prueba-tecnica-solarfuel-dev-ServerlessDeploymentBucketName"
      }
    ]
  }
}